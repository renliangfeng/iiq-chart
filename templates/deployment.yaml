{{- range $type, $config := .Values.servers }}
{{- with (merge (dict "serverType" $type "serverConfig" $config) $) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .serverType }}
  labels: {{- include "podLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "podLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "podLabels" . | nindent 8 }}
      annotations:
        # These checksum ensure that the pods restart when these configs are changed
        # Otherwise those config changes will not be picked up automatically
        checksum/properties: {{ include (print $.Template.BasePath "/iiq-properties-configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # This tries to ensure multiple pods with the same labels are spread
      # evenly across our AZs.
      {{- if .Values.spreadAZs.enabled }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels: {{ include "podLabels" . | nindent 12 }}
      {{- end }}
      containers:
        - name: identityiq
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          resources: {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env: {{ toYaml .serverConfig.env | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              port: http
              path: /
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: iiq-properties
              mountPath: /usr/local/tomcat/webapps/identityiq/WEB-INF/classes/iiq.properties
              subPath: iiq.properties
            - name: log4j2-properties
              mountPath: /usr/local/tomcat/webapps/identityiq/WEB-INF/classes/log4j2.properties
              subPath: log4j2.properties
            - name: keystore
              mountPath: {{ .Values.keystore.mountPath }}
            - name: iiq-log-volume
              mountPath: /usr/local/tomcat/logs
            - name: fulltext-index-volume
              mountPath: {{ .Values.fullTextIndex.mountPath }}
            - name: file-upload-volume
              mountPath: {{ .Values.fileUploadPath.mountPath }}
      volumes:
        - name: iiq-properties
          configMap:
            name: iiq-properties
        - name: log4j2-properties
          configMap:
            name: log4j2-properties
        - name: keystore
          hostPath: 
            path: {{ .Values.keystore.hostPath }}
            type: Directory
        - name: iiq-log-volume
          hostPath:
            path: {{ .Values.log.hostPath }} 
            type: Directory
        - name: fulltext-index-volume
          hostPath:
            path: {{ .Values.fullTextIndex.hostPath }} 
            type: Directory
        - name: file-upload-volume
          hostPath:
            path: {{ .Values.fileUploadPath.hostPath }} 
            type: Directory
{{- end }}
{{- end }}
